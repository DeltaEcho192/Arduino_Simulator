/* Arduino USB Keyboard HID demo
 * Cut/Copy/Paste Keys
 */

#define KEY_LEFT_CTRL  0x01
#define KEY_LEFT_SHIFT  0x02
#define KEY_LEFT_ALT 226
#define KEY_RIGHT_CTRL  0x10
#define KEY_RIGHT_SHIFT 0x20
#define KEY_RIGHT_ALT 230
#define KEY_F 9

uint8_t buf[8] = { 
  0 };  /* Keyboard report buffer */
#define PIN_FLAPS 3
#define PIN_XXX 4
#define PIN_GEAR 5
#define PIN_FLARES 6
#define PIN_ENGINE 11
#define PIN_ATG 8 
#define PIN_ATA 9
#define PIN_WEAPON 10

int state = 1;
int flapstate = 0;
int flaponsent = 0;
int flapoffsent = 0;

void setup() 
{
  Serial.begin(9600);

  pinMode(PIN_GEAR, INPUT);
  pinMode(PIN_FLARES, INPUT);
  pinMode(PIN_ENGINE, INPUT);
  pinMode(PIN_FLAPS, INPUT);
  pinMode(PIN_XXX, INPUT);
  pinMode(PIN_ATG, INPUT);
  pinMode(PIN_ATA, INPUT);
  pinMode(PIN_WEAPON, INPUT);
  
  // Enable internal pull-ups
  digitalWrite(PIN_FLAPS, 1);
 
  
  digitalWrite(PIN_GEAR, 1); 
  digitalWrite(PIN_FLARES, 1);
  digitalWrite(PIN_ENGINE, 1); 
  digitalWrite(PIN_ATG, 1);
  digitalWrite(PIN_ATA, 1);
  digitalWrite(PIN_WEAPON, 1);

  delay(200);
}

void loop() 
{
  int xstate = digitalRead(PIN_FLAPS);
  if (flapstate != xstate) {
     if (xstate == 1 && flaponsent == 0) {
       buf[0] = KEY_LEFT_SHIFT;   // SHIFT
       buf[2] = KEY_F;    // Key F
       Serial.write(buf, 8); // Ssend keypress
       releaseKey();
       flaponsent = 1;
       flapoffsent = 0;
       }
     if (xstate == 0 && flapoffsent == 0) {
        buf[2] = 9;   // F
        Serial.write(buf, 8); // Send keypress
        releaseKey();
        flaponsent = 0;
        flapoffsent = 1;
      }
       
     } 
     flapstate = xstate;
   
   
  
  state = digitalRead(PIN_XXX);
  if (state != 1) {
    buf[2] = 9;   // F
    Serial.write(buf, 8); // Send keypress
    releaseKey();
    delay(1000);
  } 
  state = digitalRead(PIN_ENGINE);
  if (state != 1) {
    buf[0] = KEY_LEFT_SHIFT;   // SHIFT
    buf[2] = 74;    // Key Home
    Serial.write(buf, 8); // Send keypress
    releaseKey();
    delay(2000);
  } 

  state = digitalRead(PIN_GEAR);
  if (state != 1) {
    buf[2] = 10;   // G
    Serial.write(buf, 8); // Send keypress
    releaseKey();
    delay(2000);
  } 

  state = digitalRead(PIN_FLARES);
  if (state != 1) {
    buf[2] = 20;   // q
    
    Serial.write(buf, 8); // Send keypress
    releaseKey();
    
  } 
  state = digitalRead(PIN_ATG);
  if (state != 1) {
    buf[2] = 36;   // 7
    Serial.write(buf, 8); // Send keypress
    releaseKey();
    delay(2000);
  } 
  state = digitalRead(PIN_ATA);
  if (state != 1) {
    buf[2] = 35;   // 6
    Serial.write(buf, 8); // Send keypress
    releaseKey();
    delay(2000);
  } 
   state = digitalRead(PIN_WEAPON);
  if (state != 1) {
    buf[2] = 7;   // G
    Serial.write(buf, 8); // Send keypress
    releaseKey();
    delay(2000);
  } 
}

void releaseKey() 
{
  buf[0] = 0;
  buf[2] = 0;
  Serial.write(buf, 8); // Release key  
  delay(500);
}
